# Generated by Django 2.1.1 on 2019-03-16 04:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gatorgrouper.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [("auth", "0009_alter_user_last_name_max_length")]

    operations = [
        migrations.CreateModel(
            name="Professor",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=200, unique=True)),
                ("professor_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=25)),
                ("last_name", models.CharField(max_length=25)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", gatorgrouper.models.UserManager())],
        ),
        migrations.CreateModel(
            name="Assignment",
            fields=[
                ("assignment_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "assignment_name",
                    models.CharField(default="Group Project", max_length=30),
                ),
                ("description", models.CharField(blank=True, max_length=350)),
            ],
        ),
        migrations.CreateModel(
            name="Grouped_Student",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("group_name", models.CharField(default="group #", max_length=30)),
                (
                    "assignment_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gatorgrouper.Assignment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Semester_Class",
            fields=[
                (
                    "semester",
                    models.CharField(
                        choices=[("S19", "Spring, 2019"), ("F19", "Fall, 2019")],
                        default="---------",
                        max_length=3,
                    ),
                ),
                ("class_id", models.AutoField(primary_key=True, serialize=False)),
                ("department", models.CharField(max_length=10)),
                ("class_number", models.CharField(max_length=10)),
                ("class_section", models.CharField(max_length=10)),
                ("domain_name", models.CharField(blank=True, max_length=100)),
                (
                    "professor_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                ("student_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                (
                    "class_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gatorgrouper.Semester_Class",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student_Conflict",
            fields=[
                ("conflict_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "severity_rank",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "class_id",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gatorgrouper.Semester_Class",
                    ),
                ),
                (
                    "student1",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="id1",
                        to="gatorgrouper.Student",
                    ),
                ),
                (
                    "student2",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="id2",
                        to="gatorgrouper.Student",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="grouped_student",
            name="student_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="gatorgrouper.Student"
            ),
        ),
        migrations.AddField(
            model_name="assignment",
            name="class_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="gatorgrouper.Semester_Class",
            ),
        ),
        migrations.AddField(
            model_name="assignment",
            name="professor_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AlterUniqueTogether(
            name="grouped_student", unique_together={("assignment_id", "student_id")}
        ),
    ]
